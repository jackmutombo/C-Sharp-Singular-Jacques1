/*
Deployment script for JacquesBDSingular

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JacquesBDSingular"
:setvar DefaultFilePrefix "JacquesBDSingular"
:setvar DefaultDataPath "C:\Users\Jacques\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Jacques\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User] DROP CONSTRAINT [DF__User__CreateDate__25869641];


GO
PRINT N'Dropping [dbo].[FK_Address_ToUser]...';


GO
ALTER TABLE [dbo].[Address] DROP CONSTRAINT [FK_Address_ToUser];


GO
PRINT N'Starting rebuilding table [dbo].[Address]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Address] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Type]        NVARCHAR (50)  NOT NULL,
    [AddressName] NVARCHAR (200) NOT NULL,
    [Street]      NVARCHAR (100) NOT NULL,
    [Suburb]      NVARCHAR (100) NOT NULL,
    [City]        NVARCHAR (100) NOT NULL,
    [PostalCode]  NVARCHAR (50)  NOT NULL,
    [AuthUserId]  NVARCHAR (128) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Address])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Address] ([Type], [AddressName], [Street], [Suburb], [City], [PostalCode], [AuthUserId])
        SELECT [Type],
               [AddressName],
               [Street],
               [Suburb],
               [City],
               [PostalCode],
               [AuthUserId]
        FROM   [dbo].[Address];
    END

DROP TABLE [dbo].[Address];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Address]', N'Address';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_User] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [AuthUserId]   NVARCHAR (128) NOT NULL,
    [FirstName]    NVARCHAR (50)  NOT NULL,
    [LastName]     NVARCHAR (50)  NOT NULL,
    [EmailAddress] NVARCHAR (256) NOT NULL,
    [CellPhone]    VARCHAR (20)   NOT NULL,
    [CreateDate]   DATETIME2 (7)  DEFAULT getutcdate() NOT NULL,
    PRIMARY KEY CLUSTERED ([AuthUserId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[User])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_User] ([AuthUserId], [FirstName], [LastName], [EmailAddress], [CellPhone], [CreateDate])
        SELECT   [AuthUserId],
                 [FirstName],
                 [LastName],
                 [EmailAddress],
                 [CellPhone],
                 [CreateDate]
        FROM     [dbo].[User]
        ORDER BY [AuthUserId] ASC;
    END

DROP TABLE [dbo].[User];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_User]', N'User';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Address_ToUser]...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_ToUser] FOREIGN KEY ([AuthUserId]) REFERENCES [dbo].[User] ([AuthUserId]);


GO
PRINT N'Creating [dbo].[spAddress_Insert]...';


GO
CREATE PROCEDURE [dbo].[spAddress_Insert]
	@Id int output,
	@Type nvarchar(50),
	@AddressName nvarchar(200),
	@Street nvarchar(100),
	@Suburb nvarchar(100),
	@City nvarchar(100),
	@PostalCode nvarchar(50),
	@AuthUserId nvarchar(128)
AS

BEGIN

	SET NOCOUNT ON;

	insert into dbo.Address([Type], AddressName, Street,Suburb, City, PostalCode, AuthUserId)
	values (@Type, @AddressName, @Street,Suburb, @City, @PostalCode, @AuthUserId);

	SELECT CAST(SCOPE_IDENTITY() as int);

END
GO
PRINT N'Creating [dbo].[spUser_Insert]...';


GO
CREATE PROCEDURE [dbo].[spUser_Insert]
@Id int output,
	@AuthUserId nvarchar(128),
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@EmailAddress nvarchar(256),
	@CellPhone varchar(20)

AS

BEGIN

	SET NOCOUNT ON;

	insert into [dbo].[User](AuthUserId, FirstName, LastName, EmailAddress, CellPhone)
	values (@AuthUserId, @FirstName, @LastName, @EmailAddress, @CellPhone);

	SELECT CAST(SCOPE_IDENTITY() as int);

	select @Id =@@IDENTITY;

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_ToUser];


GO
PRINT N'Update complete.';


GO
